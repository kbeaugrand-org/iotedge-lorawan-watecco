name: Continuous Deployment

# Controls when the workflow will run
on:
  push:
    tags: 'v*' 
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
      # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:  [amd64, arm32v7, arm64v8]
    env:
      image_name: kbeaugrand/az-iotedge-watteco-decoder-module
      tag_name: ${GITHUB_REF##*/}
      module_path: src/modules/WattecoDecoderModule

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          submodules: true        
      
      - name: Docker Login
        # You may pin to the exact commit or the version.
        uses: docker/login-action@v1.10.0
        with:
          # Username used to log against the Docker registry
          username:  ${{ secrets.DOCKER_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password:  ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.arch }}
        # You may pin to the exact commit or the version.
        uses: docker/build-push-action@v2.7.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ${{ env.module_path }}
          # Path to the Dockerfile
          file: "${{ env.module_path }}/Dockerfile.amd64"
          # Push is a shorthand for --output=type=registry
          push: true
          # List of SSH agent socket or keys to expose to the build
          ssh: # optional
          # List of tags
          tags: ${{ env.image_name }}:${{ env.tag_name }}-${{ matrix.arch }}
          
  publish: 
    runs-on: ubuntu-latest
    steps:
      - name: Create the manifest
        run: docker manifest create ${{ env.image_name }}:${{ env.tag_name }} --amend ${{ env.image_name }}:${{ env.tag_name }}-amd64 --amend ${{ env.image_name }}:${{ env.tag_name }}-arm32v7 --amend ${{ env.image_name }}:${{ env.tag_name }}-arm64v8

      - name: Publish  the manifest
        run: docker manifest push ${{ env.image_name }}:${{ env.tag_name }}