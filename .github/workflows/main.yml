# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    IMAGE_NAME: kbeaugrand/az-iotedge-watteco-decoder-module
    TAG_NAME: 0.0.1
    MODULE_PATH: ./modules/WattecoStandardReportDecoderModule

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        uses: docker/login-action@v1.10.0
        with:
          # Username used to log against the Docker registry
          username:  ${{ secrets.DOCKER_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password:  ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push amd64
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        uses: docker/build-push-action@v2.7.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: "${MODULE_PATH}"
          # Path to the Dockerfile
          file: "${MODULE_PATH}/Dockerfile.amd64"
          # Push is a shorthand for --output=type=registry
          push: true
          # List of SSH agent socket or keys to expose to the build
          ssh: # optional
          # List of tags
          tags: "${IMAGE_NAME}:${TAG_NAME}-amd64"

      - name: Build and push arm32v7
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        uses: docker/build-push-action@v2.7.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: "${MODULE_PATH}"
          # Path to the Dockerfile
          file: "${MODULE_PATH}/Dockerfile.arm32v7"
          # Push is a shorthand for --output=type=registry
          push: true
          # List of SSH agent socket or keys to expose to the build
          ssh: # optional
          # List of tags
          tags: "${IMAGE_NAME}:${TAG_NAME}-arm32v7"

      - name: Build and push arm64v8
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229
        uses: docker/build-push-action@v2.7.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: "${MODULE_PATH}"
          # Path to the Dockerfile
          file: "${MODULE_PATH}/Dockerfile.arm64v8"
          # Push is a shorthand for --output=type=registry
          push: true
          # List of SSH agent socket or keys to expose to the build
          ssh: # optional
          # List of tags
          tags: "${IMAGE_NAME}:${TAG_NAME}-arm64v8"

      - name: Create the manifest
        run: docker manifest create "${IMAGE_NAME}:${TAG_NAME}" --amend "${IMAGE_NAME}:${TAG_NAME}-amd64" --amend "${IMAGE_NAME}:${TAG_NAME}-arm32v7" --amend "${IMAGE_NAME}:${TAG_NAME}-arm64v8"

      - name: Publish  the manifest
        run: docker manifest push "${IMAGE_NAME}:${TAG_NAME}"